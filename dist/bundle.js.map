{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/Game.js","webpack:///./src/js/Render.js","webpack:///./src/js/Vectrors.js","webpack:///./src/js/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;AACA,gDAAwC;AACxC;AACA,8CAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAG;AACH;AACA;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA,CAAqC;AACM;AAC3C,YAAY,gDAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAO;AACf,0BAA0B,8CAAM;AAChC;AACA;AACA;AACA;AACA;AACgB;AAChB,gC;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA,CAA4C;AACrC;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+CAAK,EAAE,iBAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gDAAM,uBAAuB;AAChE,kCAAkC,gDAAM,8BAA8B;AACtE,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA,uCAAuC;AACvC,6CAA6C;AAC7C;AACA,0CAA0C,IAAI,WAAW,IAAI,SAAS,GAAG,eAAe,KAAK,YAAY,KAAK,SAAS,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA,CAAoC;AACpC,qBAAqB,+CAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyB;AACzB,oC;;;;;;;;;;;;ACtEA;AAAA;AAAA,CAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAAI;AACnB;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC,uBAAuB,gBAAgB;AACvC;AACA,YAAY,kCAAkC;AAC9C,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB;AAC1B,SAAS;AACT;AACA,CAAC;AACD,iC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// webpack-livereload-plugin\n \t(function() {\n \t  if (typeof window === \"undefined\") { return };\n \t  var id = \"webpack-livereload-plugin-script-0b2aa2779637577e\";\n \t  if (document.getElementById(id)) { return; }\n \t  var el = document.createElement(\"script\");\n \t  el.id = id;\n \t  el.async = true;\n \t  el.src = \"//\" + location.hostname + \":35729/livereload.js\";\n \t  document.getElementsByTagName(\"head\")[0].appendChild(el);\n \t}());\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","﻿import { Vector } from \"./Vectrors\";\r\nimport { Setting, Render } from \"./Render\";\r\nlet s = new Vector(4, 5);\r\n//\r\n// class DyPoint extends Point {\r\n//     typ: string = 'DyPoint';\r\n//     vel: Vector;\r\n//     acc: Vector;\r\n//     size: number = 10;\r\n//     par: Point;\r\n//     grav = new Vector(0,0.1);\r\n//     dist: number;\r\n//\r\n//     constructor(pos: Position, size?: number) {\r\n//         super(pos, size);\r\n//         this.vel = new Vector();\r\n//         this.acc = new Vector(0,0);\r\n//         this.size = size || 5;\r\n//     }\r\n//\r\n//     move() {\r\n//\r\n//\r\n//\r\n//         let distance = Vector.distance(this, this.par);\r\n//\r\n//         this.acc.y =  distance.length -this.acc.y;\r\n//         this.acc.x = distance.length - this.acc.x;\r\n//\r\n//         this.vel.x +=  this.acc.x;\r\n//         this.vel.y +=  this.acc.y;\r\n//\r\n//         this.x += this.vel.x;\r\n//         this.y += this.vel.y;\r\n//\r\n//\r\n//     }\r\n//\r\n//     animate() {\r\n//\r\n//         this.draw();\r\n//         this.move();\r\n//\r\n//         // let o = this;\r\n//         // let id = setInterval(function () {\r\n//         //     o.draw();\r\n//         //     o.move();\r\n//         // }, 16.6)\r\n//     }\r\n// }\r\n//\r\n// interface ISet {\r\n//     canvas: HTMLCanvasElement;\r\n//     ctx: CanvasRenderingContext2D;\r\n//     fixedPoints: Position;\r\n//     point: Position;\r\n// }\r\nclass Game {\r\n    constructor(setting) {\r\n        // this.set.ctx = setting.canvas.getContext(\"2d\");\r\n        Setting.prototype.setting = setting;\r\n        this.render = new Render();\r\n        console.log(this.render.setting);\r\n        this.render.animate();\r\n        // this.init();\r\n    }\r\n}\r\nexport { Game };\r\n//# sourceMappingURL=Game.js.map","﻿import { Vector, Point } from \"./Vectrors\";\r\nexport class Setting {\r\n}\r\nexport class Render extends Setting {\r\n    constructor() {\r\n        super();\r\n        this.points = [];\r\n        // this.setting.ctx.shadowColor = 'rgba(0,0,0,0.2)';\r\n        // this.setting.ctx.shadowBlur = 10;\r\n        // this.setting.ctx;\r\n        this.add();\r\n    }\r\n    add() {\r\n        for (let p of this.setting.points) {\r\n            this.points.push(new Point({ x: p.x, y: p.y }, 5, p.type));\r\n        }\r\n        for (let k of this.points) {\r\n            console.log(k);\r\n        }\r\n    }\r\n    draw() {\r\n        this.setting.ctx.clearRect(0, 0, this.setting.width, this.setting.height);\r\n        let lock = 40;\r\n        let power = 0.01;\r\n        let r = 0.02;\r\n        for (let p1 of this.points) {\r\n            for (let p2 of this.points) {\r\n                if (true) {\r\n                    let distance = Vector.pointDistance(p1, p2); // дистаниця\r\n                    let fVector = Vector.vectorAB(p1, p2).normalize(); // вектор силы\r\n                    let diff = distance - lock; // относительное растяжение стержня (+)\r\n                    //  let f =    ((power  * diff) + p1.vel.x*r + p1.acc.x;\r\n                    //  let fy =  (power * diff) + p1.vel.y*r + p1.acc.y;\r\n                    //  // let fy =  (power * diff) + (p1.vel.y*r) + (p1.acc.y*0.000000001 );\r\n                    //  // let fy =       (power * diff) + (p1.acc.y*r) ;\r\n                    //  // let f = (100 )/;\r\n                    console.log(\"distance: \", distance);\r\n                    //  // console.log (\"fVector: \", fVector);\r\n                    //  // console.log (\"diff: \", diff);\r\n                    //  // console.log ('res:  = ', (fVector.x * diff * power));\r\n                    //  // console.log ('accc:  = ', p1.acc.x);\r\n                    //\r\n                    //  p1.acc.x +=  ( fVector.x * f ) ;\r\n                    //  p1.acc.y += (fVector.y * fy) ;\r\n                    let plus = (diff / (2));\r\n                    p1.x += plus * fVector.x;\r\n                    p2.x -= plus * fVector.x;\r\n                    p1.y += plus * fVector.y;\r\n                    p2.y -= plus * fVector.y;\r\n                }\r\n            }\r\n        }\r\n        for (let p1 of this.points) {\r\n            p1.move();\r\n            p1.draw();\r\n        }\r\n        for (let p1 of this.points) {\r\n            for (let p2 of this.points) {\r\n                if (p1 !== p2) {\r\n                    this.setting.ctx.beginPath();\r\n                    this.setting.ctx.moveTo(p1.x, p1.y);\r\n                    this.setting.ctx.lineTo(p2.x, p2.y);\r\n                    this.setting.ctx.strokeStyle = 'rgba(255,22,190,0.05)';\r\n                    this.setting.ctx.lineWidth = 1.5;\r\n                    this.setting.ctx.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    animate() {\r\n        this.draw();\r\n        requestAnimationFrame(() => this.animate());\r\n        // function guk(){\r\n        //\r\n        //     let blength = 50;\r\n        //     let k = 0.1;\r\n        //\r\n        //     let x1 = 0;\r\n        //     let x2 = 75;\r\n        //     let vx2 = 0;\r\n        //     let ax2 = 0;\r\n        //     let r = 0.2;\r\n        //\r\n        //     for (let i=0 ; i < 1000; i++){\r\n        //\r\n        //\r\n        //         let dist = x2 - x1 ; // distance\r\n        //         let diff = dist - blength; // relative length\r\n        //         let f = -(k*diff) ;\r\n        //         console.log(/* `ax2: ${ax2}`, `vx2: ${vx2}`,`px: ${x2}`, */ `dist: ${dist}`, `diff: ${diff}`, `f: ${f}`     )\r\n        //\r\n        //         ax2 = f * r;\r\n        //         vx2 = vx2 + ax2;\r\n        //         x2 = x2 + vx2;\r\n        //\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n//# sourceMappingURL=Render.js.map","﻿import { Setting } from \"./Render\";\r\nclass Vector extends Setting {\r\n    constructor(x, y) {\r\n        super();\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n    get length() {\r\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\r\n    }\r\n    normalize() {\r\n        let length = this.length;\r\n        return new Vector(this.x / length, this.y / length);\r\n    }\r\n    static vectorAB(a, b) {\r\n        return new Vector(b.x - a.x, b.y - a.y);\r\n    }\r\n    static pointDistance(a, b) {\r\n        return Math.sqrt((b.x - a.x) ** 2 + (b.y - a.y) ** 2);\r\n    }\r\n}\r\nclass Point extends Vector {\r\n    constructor(pos, size, type) {\r\n        super(pos.x, pos.y);\r\n        this.type = 'Point';\r\n        this.vel = new Vector();\r\n        this.acc = new Vector(0, 0);\r\n        this.grav = 0.1;\r\n        // this.pos = new Vector();\r\n        this.size = size;\r\n        this.type = type;\r\n        this.draw();\r\n        // this.vel.x = Math.random()*2 ;\r\n        // this.vel.y = Math.random()*2 ;\r\n    }\r\n    move() {\r\n        if (this.type === 'static')\r\n            return;\r\n        if (this.y + this.size > this.setting.height) {\r\n            this.y = this.setting.height - this.size;\r\n            this.vel.y *= -0.1;\r\n        }\r\n        // if (this.y - this.size < 0) {\r\n        //     this.y = 0 + this.size;\r\n        //     this.vel.y *= -1;\r\n        // }\r\n        // if (this.x + this.size > this.setting.width ) {\r\n        //     this.x = this.setting.width - this.size;\r\n        //     this.vel.x *= -1;\r\n        // }\r\n        // if (this.x - this.size < 0) {\r\n        //     this.x = 0 + this.size;\r\n        //     this.vel.x *= -1;\r\n        // }\r\n        this.vel.y += this.acc.y + this.grav;\r\n        this.vel.x += this.acc.x;\r\n        this.y += this.vel.y;\r\n        this.x += this.vel.x;\r\n    }\r\n    draw() {\r\n        this.setting.ctx.beginPath();\r\n        this.setting.ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI, false);\r\n        this.setting.ctx.fillStyle = '#eee';\r\n        this.setting.ctx.fill();\r\n        this.setting.ctx.lineWidth = 0.1;\r\n        this.setting.ctx.strokeStyle = '#000000';\r\n        this.setting.ctx.stroke();\r\n    }\r\n}\r\nexport { Vector, Point };\r\n//# sourceMappingURL=Vectrors.js.map","﻿import { Game } from \"./Game\";\r\nconsole.log('gge');\r\nlet canvas = window.document.querySelector('canvas');\r\ncanvas.width = 700;\r\ncanvas.height = 400;\r\nlet width = canvas.width / 2;\r\nlet height = canvas.height / 2;\r\nlet game = new Game({\r\n    canvas: canvas,\r\n    ctx: canvas.getContext(\"2d\"),\r\n    width: canvas.width,\r\n    height: canvas.height,\r\n    // fixedPoints  : { x:width, y:0 },\r\n    // fixedPoints  : { x:width, y:20 },\r\n    points: [\r\n        // { x: 100, y: 100, type : 'static' },\r\n        { x: 100, y: 100 },\r\n        { x: 200, y: 300 },\r\n        { x: 400, y: 200 },\r\n        { x: 200, y: 150 }\r\n    ]\r\n});\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}